# This will be sourced from `~/.profile` as well as shells rc files (e.g. `~/.bashrc`).
# shell/environment.sh is to be sourced beforehand.

# Don't run this twice
shellrc_guard=DOTFILES_SHELLRC_$$
if [ ! -z "`eval echo \\$$shellrc_guard`" ]; then
    {% if not log_shell_startup %}# {% endif %}{{ dotfiles_home }}/data/scripts/dotfiles_log.sh shell "shell/rc.sh would've been ran twice; aborting 2nd run. [`pstree -s -p $$`]"
  return
fi
export $shellrc_guard=y

{% if not log_shell_startup %}# {% endif %}{{ dotfiles_home }}/data/scripts/dotfiles_log.sh shell "shell/rc.sh start [`pstree -s -p $$`]"

{% for key, value in shell_aliases.items() %}
alias {{key}}='{{value}}'
{% endfor %}

{% if not log_shell_startup %}# {% endif %}{{ dotfiles_home }}/data/scripts/dotfiles_log.sh shell shell/rc.sh update aliases

vpn () {
  local ovpn_configs_dir="$HOME/Documents/VPN"
  local ovpn="sudo openvpn --config"
  local file="$ovpn_configs_dir/`cd \"$ovpn_configs_dir\" && ls *.ovpn | fzf --select-1 --query=$1`"
  if [ $? -eq 0 ]; then
    echo $ovpn \"$file\"
    $ovpn "$file"
  fi
}

which autojump >/dev/null 2>&1
if [ $? -eq 0 ]; then
    . $DOTFILES_HOME/data/autojump/source_scripts/autojump.sh
fi
{% if not log_shell_startup %}# {% endif %}{{ dotfiles_home }}/data/scripts/dotfiles_log.sh shell shell/rc.sh initialized autojump

{% for source in shell_sources %}
if [ -f "{{ source }}" ] ; then
    . "{{ source }}"
fi
{% endfor %}
{% if not log_shell_startup %}# {% endif %}{{ dotfiles_home }}/data/scripts/dotfiles_log.sh shell shell/rc.sh sourced {{ shell_sources }}

# Lazily initialize some commands.
# Complex construction because some initialization commands execute the command(alias) themselves.
# For example, the following pyenv alias would recursively call itself - freezing the terminal:
#   alias pyenv='eval "$(pyenv init -)" && unalias pyenv && pyenv'
#
{% for command, init_command in shell_lazy_commands.items() %}
_init_{{command}} () {
  {{init_command}} || return $?
  if [ "`alias {{command}}`" = "alias {{command}}='_init_{{command}}'" ]; then
    unalias {{command}}
  fi
  {{command}} "$@"
}
alias {{command}}=_init_{{command}}
{% endfor %}
{% if not log_shell_startup %}# {% endif %}{{ dotfiles_home }}/data/scripts/dotfiles_log.sh shell shell/rc.sh setup lazy initialization of commands {{ shell_lazy_commands.keys() | list }}

{% if not log_shell_startup %}# {% endif %}{{ dotfiles_home }}/data/scripts/dotfiles_log.sh shell shell/rc.sh end

